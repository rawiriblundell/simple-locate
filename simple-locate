#!/bin/sh
# shellcheck disable=SC2006
# Purpose:   Provide 'locate' type functionality to systems without it
# Style note: This uses awful backticks for SVR4 compatibility

############################################################
#The MIT License (MIT).
#Copyright (c) 2016 Rawiri Blundell.  

#Permission is hereby granted, free of charge, to any person obtaining
#a copy of this software and associated documentation files (the "Software"), 
#to deal in the Software without restriction, including without limitation 
#the rights to use, copy, modify, merge, publish, distribute, sublicense, 
#and/or sell copies of the Software, and to permit persons to whom the 
#Software is furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included 
#in all copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
#OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
#DEALINGS IN THE SOFTWARE.
############################################################

# To cater for Solaris, we put the xpg4 utils, 
# which don't suck, at the front of PATH:
PATH=/usr/xpg4/bin:$PATH
export PATH

# Select a destination directory
destDir=/var/lib/simple-locate

# Define a maximum age in days for the list before we complain
maxAge=7

########################################
# If we're not root, assign our username to a variable
if [ -w / ]; then
  #Dummy action required due to SVR4 bourne
  :
else
  myUserName=`whoami`
fi

# If the user is root, we can search the root file
if [ -w / ]; then
  listFile="${destDir}"/locate.root
# Otherwise, we check for our own index file
elif [ -f "${destDir}"/locate."${myUserName}" ]; then
  listFile="${destDir}"/locate."${myUserName}"
# Failing that, we default to locate.user
else
  listFile="${destDir}"/locate.user
fi

# If we are launched without any args, output usage
if [ -z "$*" ]; then
  printf "%s\n" "simple-locate - a poor sysadmin's 'locate' alternative" "" \
    "This program is basically a veneer-thin wrapper for 'egrep'" \
    "It selects either a root-readable db or a user-readable db" \
    "depending on whether you're root or not." "" \
    "Everything you command is passed otherwise verbatim to 'egrep'" \
    "so all 'egrep' options apply to this program too."
  exit 0
fi

# Now check that the file exists
if [ -f "${listFile}" ]; then
  # SVR4 dummy action
  :
else
  if command -v update-smlocate >/dev/null 2>&1; then
    printf "%s\n" "[INFO] - smlocate: ${listFile} not found, attempting to generate it with 'update-smlocate'"
    update-smlocate 2>/dev/null
  else
    printf "%s\n" "[INFO] - smlocate: ${listFile} does not appear to exist, and 'update-smlocate' couldn't be found."
    exit 1
  fi
fi

# Check the file's age and warn if it exceeds maxAge
# Note the brackets here are required as 'find' always returns 0
if [ "`find ${listFile} -mtime +${maxAge} >/dev/null 2>&1`" ]; then
  printf "%s\n" "[INFO] - smlocate: ${listFile} is older than ${maxAge} days old." \
    "Please run 'update-smlocate', and investigate setting it up as a cron job." \
    "This will ensure that search results stay up to date." "---"
fi

# Finally, pass everything to egrep and sort the output
egrep "$@" "${listFile}" | sort | uniq
